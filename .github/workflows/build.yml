name: Build Library

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type'
        required: true
        default: 'snapshot'
        type: choice
        options:
          - snapshot
          - release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  # lint_ios_podspec:
  #   name: Lint iOS Podspec
  #   runs-on: macos-14
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Lint Podspec
  #       run: pod lib lint --private --verbose --sources=https://github.com/CruGlobal/cocoapods-specs.git,https://cdn.cocoapods.org/

  current_version:
    name: Store Current Version
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set Version Output
        id: version
        run: grep s\\.version\\s RequestOperation.podspec | sed 's/s.//' | sed "s/'//g" | sed 's/ //g' >> $GITHUB_OUTPUT

  print_current_version:
    name: Print Current Version
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [ current_version ]
    steps:
      - name: Print Current Version
        env:
          VERSION: ${{ needs.current_version.outputs.version }}
        run: |
          printf '%s\n' "$VERSION"

  check_version:
    name: Check Version is Unreleased
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [ current_version ]
    outputs:
      tag: ${{ steps.tag_name.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate Tag Name
        id: tag_name
        run: echo tag=$TAG_NAME >> $GITHUB_OUTPUT
        env:
          TAG_NAME: v${{ needs.current_version.outputs.version }}
      - name: Check if version was already released
        run: "! git ls-remote -t --exit-code origin $TAG_NAME"
        env:
          TAG_NAME: ${{ steps.tag_name.outputs.tag }}